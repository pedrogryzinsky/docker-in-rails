#!/usr/bin/env ruby
# frozen_string_literal: true

require 'colorize'

def parse(file_contents)
  file_contents.each_line.inject('') do |result, line|
    return result unless (line =~ /(RAILS_ENV|RACK_ENV)/).nil?
    result + "export #{line.chomp};"
  end
end

if File.exist?('.env') || File.exist?('.env.sample') && ENV['RAILS_ENV'] != 'production'
  filename = File.exist?('.env') ? '.env' : '.env.sample'
  puts parse(File.read(filename))
elsif ENV['RAILS_ENV'] == 'production'
  exit(1) unless ENV['ENVFILE']
  
  require 'aws-sdk'
    
  default_region = ENV['ENVFILE_REGION'] || 'us-east-1'

  s3 = Aws::S3::Client.new(region: default_region)
  kms = Aws::KMS::Client.new(region: default_region)
  
  key = kms.list_aliases.aliases.find do |alias_struct|
    alias_struct.alias_name == "alias/#{ENV['KMS_ALIAS']}"
  end
  
  # encryption client
  s3_enc_client = Aws::S3::Encryption::Client.new(
    client: s3,
    kms_key_id: key.target_key_id,
    kms_client: kms_client
  )
  
  # retrieve and decrypt .env from s3
  response = s3_enc_client.get_object(bucket: ENV['SECRETS_BUCKET'], key: ENV['ENVFILE'])
  puts parse(response.body.read)
end
