#!/usr/bin/env ruby
# frozen_string_literal: true

Bundler.require(:default)
require 'colorize'

include ActiveRecord::Tasks

DatabaseTasks.root = File.expand_path('/srv/app')
DatabaseTasks.db_dir = File.join DatabaseTasks.root, 'db'
DatabaseTasks.env = ENV.fetch 'ENV', ENV.fetch('RAILS_ENV', 'development')

exit begin
  connection_tries ||= 3
  ActiveRecord::Base.establish_connection
  ActiveRecord::Migration.check_pending!
  0
rescue PG::ConnectionBad
  unless (connection_tries -= 1).zero?
    puts "[ERROR] Retrying DB connection #{connection_tries} more times...".colorize(:red)
    sleep ENV.fetch('APP_SETUP_WAIT', '5').to_i
    retry
  end
  1

rescue ActiveRecord::PendingMigrationError
  puts '[WARN] Migrations are pending, running latest migrations'.colorize(:yellow)
  return 1 unless exec('rake db:migrate')
  0
rescue ActiveRecord::NoDatabaseError
  puts '[ERROR] Database not found...'.colorize(:red)
  return 1 unless DatabaseTasks.create_current
  if DatabaseTasks.load_schema_current
    puts '[INFO] Schema loaded correctly...'
  else
    puts '[ERROR] Schema could not be loaded...'.colorize(:red)
  end
  retry
ensure
  ActiveRecord::Base.clear_all_connections!
end
